min cost path -- leetcode 64
space optimised approach wud be to use same grid as a table to store cost
--also we can modify djikstra shortest path algo for this prb

class Solution {
public:
    int  util(vector<vector<int>>& dp,vector<vector<int>>& grid,int i,int j)
    {
        if(i<0 || j<0 )
        return INT_MAX;
        if(dp[i][j]==-1)
        {
            if(i==0 && j==0)
            dp[i][j]=grid[i][j];
            else
            {
                dp[i][j]=min(util(dp,grid,i,j-1),util(dp,grid,i-1,j))+grid[i][j];
            }
        }
        return dp[i][j];
    }
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>> dp(m,vector<int>(n,-1));
        
        return util(dp,grid,m-1,n-1);
    }
};