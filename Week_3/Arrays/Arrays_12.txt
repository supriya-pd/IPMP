leetcode 287-find the duplicate number

in this question there was only 1 number that is repeating,
 even if two or more numbers are repeating approach is similar, only thing is 
range should be such that it could be used as index

class Solution {
public:
    int findDuplicate(vector<int>& arr) {
        int n=arr.size();
        for(int i=0;i<n;i++)
        {
            if(arr[abs(arr[i])]>0)
               arr[abs(arr[i])]=-arr[abs(arr[i])];
            else
                return abs(arr[i]);
        }
        return -1;
    }
};

follow ups

How can we prove that at least one duplicate number must exist in nums?--bec range is from 1 to n but length is n+1
Can you solve the problem without modifying the array nums? --yes we can then use xor technique or using count array where indices are array elements
Can you solve the problem using only constant, O(1) extra space?--yes done, also xor approach can do that
Can you solve the problem with runtime complexity less than O(n2)?--yup 