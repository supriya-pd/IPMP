Find Tripletsfrom LL equal to Sum 

#include <bits/stdc++.h>
using namespace std;

struct Node{
	int data;
	Node *next;
	Node(int data)
	{
		this->data=data;
		next=NULL;
	}
};
void printList(Node *head)
{
	while(head!=NULL)
	{
		cout<<head->data<<" ";
		head=head->next;
	}
	cout<<endl;
}
void getInput(Node *head,int n)
{
	Node *ptr=head;
	for(int i=0;i<n;i++)
	{
		int s; cin>>s;
		ptr->next=new Node(s);
		ptr=ptr->next;
	}
}

void FrontBackSplit(Node *head,Node **a_ref,Node **b_ref)
{
	if(!head)
    {
        (*a_ref)=head;
        (*b_ref)=head;
        return;
    }
    Node *slow=head;
    Node *fast=head->next;
    while(fast && fast->next)
    {
        slow=slow->next;
        fast=fast->next->next;
    }
    (*a_ref)=head;
    (*b_ref)=slow->next;
    slow->next=NULL;
}
Node* SortedMerge(Node *a,Node *b)
{
    if(!a)
    return b;
    if(!b)
    return a;
    Node *result=NULL;
    if(a->data<=b->data)
    {
        result=a;
        result->next=SortedMerge(a->next,b);
    }
    else
    {
        result=b;
        result->next=SortedMerge(a,b->next);
    }
    return result;
}
Node *DescendingSortedMerge(Node *a,Node *b)
{
	if(!a)
    return b;
    if(!b)
    return a;
    Node *result=NULL;
    if(a->data>=b->data)
    {
        result=a;
        result->next=DescendingSortedMerge(a->next,b);
    }
    else
    {
        result=b;
        result->next=DescendingSortedMerge(a,b->next);
    }
    return result;
}
void sortLL(Node **head_ref)
{
	Node *head=*head_ref;
	Node *a;
	Node *b;
	if(head==NULL || head->next==NULL)
	return;
	FrontBackSplit(head,&a,&b);
	sortLL(&a);
	sortLL(&b);
	*head_ref=SortedMerge(a,b);
}
void DescendingsortLL(Node **head_ref)
{
	Node *head=*head_ref;
	Node *a;
	Node *b;
	if(head==NULL || head->next==NULL)
	return;
	FrontBackSplit(head,&a,&b);
	DescendingsortLL(&a);
	DescendingsortLL(&b);
	*head_ref=DescendingSortedMerge(a,b);
}
void tripletSum(Node *head1,Node *head2,Node *head3,int sum)
{
	while(head1!=NULL)
	{
		Node *ptr2=head2;
		Node *ptr3=head3;
		while(ptr2 && ptr3)
		{
			int currSum=ptr2->data+ptr3->data+head1->data;
			//cout<<currSum<<" "<<sum<<endl;
			if(currSum==sum)
			{
				cout<<head1->data<<" "<<ptr2->data<<" "<<ptr3->data<<endl;
				return;
			}
			else if(currSum>sum)
			ptr3=ptr3->next;
			else
			ptr2=ptr2->next;
		}
		//cout<<"Checked for "<<head1->data<<endl;
		head1=head1->next;
	}
}
int main()
{
	int n1,n2,n3,sum;
	cin>>n1>>n2>>n3>>sum;
	Node *head1=new Node(0);
	Node *head2=new Node(0);
	Node *head3=new Node(0);
    getInput(head1,n1);
    getInput(head2,n2);
    getInput(head3,n3);
    head1=head1->next;
    head2=head2->next;
    head3=head3->next;
    printList(head1);
    //printList(head2);
    //printList(head3);
    sortLL(&head2);
    printList(head2);
    DescendingsortLL(&head3);
    printList(head3);
    cout<<"Processing..."<<endl;
    tripletSum(head1,head2,head3,sum);
}
done on dev c++