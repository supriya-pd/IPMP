correct bst when two nodes are swapped-leetcode99

inorder traversal

class Solution {
public:
    void swap(int *a,int *b)
    {
        int t=*a;
        *a=*b;
        *b=t;
    }
    void util(TreeNode *root,TreeNode **first,TreeNode **middle,TreeNode **last,TreeNode **prev)
    {
        if(!root)
            return;
        util(root->left,first,middle,last,prev);
        if(*prev && root->val<(*prev)->val)
        {
            if(!(*first))
            {
                *first=*prev;
                *middle=root;
            }else
                *last=root;
        }
        *prev=root;
        util(root->right,first,middle,last,prev);
    }
    void recoverTree(TreeNode* root) {
        TreeNode *first=NULL,*middle=NULL,*last=NULL,*prev=NULL;
        util(root,&first,&middle,&last,&prev);
        if(first && last)
            swap(&(first->val),&(last->val));
        else if(first && middle)
            swap(&(first->val),&(middle->val));
    }
};