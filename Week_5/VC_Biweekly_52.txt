all problems were actually easy - i did them

only one question - 1862 - sum of floored pairs -- ? -- concept of frequency array sum

class Solution {
public:
    int sumOfFlooredPairs(vector<int>& nums) {

        vector<long> freq(2*100000,0); // 0 to 2*100000-1
        int n=nums.size();
        map<int,int> dis;
        int m = 0;
        long s=0;
        for(auto num : nums)
        {
            freq[num]++;
            dis[num]++;
            m=max(m,num);
        }
        for(int i=1;i<200000;i++)
            freq[i]=freq[i]+freq[i-1];
        
        for(auto it : dis)  // used a hashmap bec we have to do it for distict elements else TLE
        {
            long num =it.first; int f = it.second;
            long l = num,r = 2*num-1,d = 1;
            while(l<=m)
            {
                s=(s + f*d*(freq[r]-freq[l-1]))%1000000007; // long is needed becaus while multiplication it may exceed
                l=l+num;
                r=r+num;
                d=d+1;
            }
        }
        return s;
    }
};